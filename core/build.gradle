plugins {
    id("org.jetbrains.kotlin.jvm") version "1.7.21"
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

dependencies {
    shadow(group: "org.apache.commons", name: "commons-math3", version: "3.6.1")
    shadow(group: "com.github.Chronoken", name: "EffectLib", version: "1be5ee7fd7")
    shadow(group: "co.aikar", name: "acf-paper", version: "0.5.1-SNAPSHOT")
    compileOnly(group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: "1.7.10")

    shadow(project(path: ":nms:shared", configuration: "apiElements"))
    shadow(project(path: ":nms:v1_19_R1", configuration: "reobf"))
    shadow(project(path: ":nms:v1_19_R2", configuration: "reobf"))

    implementation(group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0") { transitive = false }
    implementation(group: "com.github.libraryaddict", name: "LibsDisguises", version: "v10.0.25") { transitive = false }
    implementation(group: "com.github.MilkBowl", name: "VaultAPI", version: "master-SNAPSHOT") { transitive = false }
    implementation(group: "com.github.PlaceholderAPI", name: "PlaceholderAPI", version: "master-SNAPSHOT") { transitive = false }
    implementation(group: "com.github.TechFortress", name: "GriefPrevention", version: "master-SNAPSHOT") { transitive = false }
    implementation(group: "com.github.Xezard", name: "XGlow", version: "master-SNAPSHOT") {
        exclude(module: "XGlowPlugin")
        exclude(module: "XGlowExample")
    }

    implementation(group: "com.github.EngineHub", name: "WorldGuard", version: "master") {
        exclude(module: "worldguard-libs")
    }

    compileOnly(group: "com.github.EngineHub", name: "WorldEdit", version: "master") {
        transitive = false
        exclude(module: "ap")
        exclude(module: "cli")
        exclude(module: "fabric")
        exclude(module: "forge")
        exclude(module: "sponge")
        exclude(module: "worldedit-cli")
        exclude(module: "worldedit-sponge")
        exclude(module: "worldedit-forge-mc1.16.1")
        exclude(module: "worldedit-fabric-mc1.16.1")
    }

}

shadowJar {
    configurations = [project.configurations.shadow]

    setArchivesBaseName("MagicSpells")
    relocate("org.apache.commons.math3", "com.nisovin.magicspells.shaded.org.apache.commons")
    relocate("de.slikey.effectlib", "com.nisovin.magicspells.shaded.effectlib")
    relocate("kotlin", "com.nisovin.magicspells.shaded.kotlin")
    relocate("co.aikar.commands", "com.nisovin.magicspells.shaded.acf")
    relocate("co.aikar.locales", "com.nisovin.magicspells.shaded.locales")
    archiveClassifier.set("")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

artifacts {
    archives shadowJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            name = "minepalm-snapshots"
            url = uri("https://nexus.minepalm.com/repository/maven-snapshots")
            credentials {
                username = project.properties["myNexusUsername"].toString()
                password = project.properties["myNexusPassword"].toString()
            }
        }

    }
}
